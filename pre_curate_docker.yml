resources:
  - name:       curatedocker
    type:       IncomingWebhook
    configuration:
      webhookName: curate_docker

pipelines:
  - name: CurateDocker
    steps:
    - name: ExampleStep
      type: Bash
      configuration:
        integrations:
          - name: artifactory
        inputResources:
          - name: curatedocker
      execution:
          onExecute:
            - docker login -u `echo "${int_artifactory_user}"` -p `echo "${int_artifactory_apikey}"` `echo "${int_artifactory_url}" | sed -E 's/.*\/\/([^\/]+).*/\1/'`
            - echo "$res_curatedocker_payload" | jq '.' > payload.json
            - echo `read_json payload.json "image"`
            - image="$(read_json payload.json 'image')"
            - artPath="$(echo $image | sed -E 's/[^\/]+\/([^:]+):(.*)$/\1\/\2/')"
            - artBase="$(echo $artPath | sed -E 's/([^/]+)\/(.*)\/[^/]+$/\1-cache\/\2/')"
            - artImageBase="$(echo $artBase | sed -E 's/[^/]+\/(.*)+$/\1/')"
            - image_tag="$(echo $artPath | sed -E 's/.*\/([^/]+)$/\1/')"
            - echo "artPath $artPath"
            - dockerpulloutput="$(docker pull $image 2>&1 || true)"
            - echo "${dockerpulloutput}"
            - add_run_variables image="$image"
            - xrayblocked=$(echo "$dockerpulloutput" | grep -c "blocking policy configured in Xray" || true)
            - echo "${xrayblocked}"
            - if [ $xrayblocked -eq 0 ]; then add_run_variables curate="yes"; else add_run_variables curate="no"; fi
            - if [ "$curate" = "yes" ]; then curate_image="$(curl -u${int_artifactory_user}:${int_artifactory_apikey} ${int_artifactory_url}/${artPath}/list.manifest.json | jq -r '.manifests[] | select(.platform.architecture | contains("amd64")) |  "sha256__" + (.digest | sub("^sha256:"; "")) ')"; fi
            - if [ "$curate" = "yes" ]; then curl -XPOST -u${int_artifactory_user}:${int_artifactory_apikey} ${int_artifactory_url}/api/copy/${artBase}/${curate_image}?to=/shimi-curated/${artImageBase}/${curate_image} ; fi
            - if [ "$curate" = "yes" ]; then curl -XPOST -u${int_artifactory_user}:${int_artifactory_apikey} ${int_artifactory_url}/api/copy/${artBase}/${image_tag}?to=/shimi-curated/${artImageBase}/${image_tag} ; fi
